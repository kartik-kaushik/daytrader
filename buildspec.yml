version: 0.2

phases:
  pre_build:
    commands:
      - echo 'Logging into AWS'
      - aws --version
      - REPOSITORY_URI=416592256572.dkr.ecr.us-east-1.amazonaws.com
#      - $(aws ecr get-login --region us-east-2 --registry-ids 732631625641)
#      - $(aws ecr get-login-password --region us-east-2)
#      - aws ecr get-authorization-token  --region us-east-2 | sed 's|https://||'
#      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 416592256572.dkr.ecr.us-east-1.amazonaws.com
#      - echo 'Logged in successfully'
      - echo 'pre build phase ends here'

  build:
    commands:
      - echo 'build commands phase starting'
      - cd daytrader-example-accountsrepo-master/daytrader-accountsapp
      - mvn install -DskipTests
      - cd daytrader-accounts
#      - docker build . -t $REPOSITORY_URI/daytrader:daytrader-accounts
      - docker build -f Dockerfile -t 416592256572.dkr.ecr.us-east-1.amazonaws.com/daytrader:daytrader-accounts --build-arg APP_ARTIFACTID=daytrader-accountsapp --build-arg WAR_ARTIFACTID=daytrader-accounts --build-arg APP_VERSION=4.0.0 --build-arg EXPOSE_PORT=1443 --build-arg DATABASE_DRIVER=com.mysql.jdbc.Driver --build-arg DATABASE_URL=jdbc:mysql://tradesdb.c5ntr5qnxgp6.us-east-1.rds.amazonaws.com:3306/tradesdb --build-arg DATABASE_USERNAME=admin --build-arg DATABASE_PASSWORD=Oracle123     
      - docker push       416592256572.dkr.ecr.us-east-1.amazonaws.com/daytrader:daytrader-accounts
      - cd ..
      - cd ..
      - cd ..
      - cd daytrader-example-gatewayrepo-master/daytrader-example-gatewayrepo-master/daytrader-gatewayapp
      - mvn install -DskipTests
      - cd daytrader-gateway
      - docker build . -t $REPOSITORY_URI/daytrader:daytrader-gateway
      - docker push       $REPOSITORY_URI/daytrader:daytrader-gateway
      - cd ../../../..
      - cd daytrader-example-portfoliosrepo-master/daytrader-portfoliosapp
      - mvn install -DskipTests
      - cd daytrader-portfolios
      - docker build . -t $REPOSITORY_URI/daytrader:daytrader-portfolios
      - docker push       $REPOSITORY_URI/daytrader:daytrader-portfolios
      - cd ../../..
      - cd daytrader-example-quotesrepo-master/daytrader-example-quotesrepo-master/daytrader-quotesapp
      - mvn install -DskipTests
      - cd daytrader-quotes
      - docker build . -t $REPOSITORY_URI/daytrader:daytrader-quotes
      - docker push       $REPOSITORY_URI/daytrader:daytrader-quotes
      - cd ../../../..
      - cd daytrader-example-webrepo-master/daytrader-example-webrepo-master/daytrader-webapp
      - mvn install -DskipTests
      - cd daytrader-web
      - docker build . -t $REPOSITORY_URI/daytrader:daytrader-web
      - docker push       $REPOSITORY_URI/daytrader:daytrader-web
#      - cd ..
#      - aws s3 cp kubernetes-manifests/account-depl.yaml         s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/account-service.yaml      s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/customer-depl.yaml        s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/customer-service.yaml     s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/derby-db-depl.yaml        s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/derby-db-service.yaml     s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/loan-depl.yaml            s3://ss-poc-shibu/
#      - aws s3 cp kubernetes-manifests/loan-service.yaml         s3://ss-poc-shibu/
